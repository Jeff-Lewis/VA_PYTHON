{
    "contents" : "library(alabama)\nlibrary(multicore)\nBiHawkesLikelihood<-function(theta,points)\n{\n\n    mu_1<-theta[1];mu_2<-theta[2];\n    alpha_11<-theta[3];alpha_12<-theta[5];alpha_21<-theta[4];alpha_22<-theta[6];\n    beta_1<-theta[7];beta_2<-theta[8]    \n    #points:dataset,type list, with list 1 being the total time(Nx1 matrix), and list2 being a list of the time of subprocesses\n    t<-points[[1]]; \n    #sub_process<-list();\n    t1<-points[[2]][[1]];\n    N<-dim(t1)[1];\n    t2<-points[[2]][[2]];\n    #print(t2)\n    M<-dim(t2)[1];\n    datanum_total<-dim(t)[1];\n\n    #calculate R cubic\n    R_11<-matrix(NaN,N,1);\n    R_12<-matrix(NaN,N,1);\n    R_21<-matrix(NaN,M,1);\n    R_22<-matrix(NaN,M,1);\n    \n    #Set the first floor of R as zero\n    R_11[1,1]<-0;R_12[1,1]<-0;R_21[1,1]<-0;R_22[1,1]<-0;\n    #fill the R matrix\n    for(i in 2:N)\n    {\n        R_11[i,1]<-(1+R_11[i-1,1])*(exp(-beta_1*(t1[i,1]-t1[i-1,1])));   \n    }\n\n    for(i in 2:N)\n    {\n        temp_sum<-0;\n        for(j in 1:M)\n        {\n            if(t2[j,1]>=t1[i,1]){break;}\n            if(t2[j,1]>=t1[i-1,1]&&t2[j,1]<t1[i,1]){temp_sum<-temp_sum+exp(-beta_1*(t1[i,1]-t2[j,1]));}\n        }\n        #print(R_12[i-1,1]*exp(-beta_1*(t1[i,1]-t1[i-1,1])))\n        R_12[i,1]<-R_12[i-1,1]*exp(-beta_1*(t1[i,1]-t1[i-1,1]))+temp_sum;\n    }\n\n    for(j in 2:M)\n    {\n        R_22[j,1]<-(1+R_22[j-1,1])*(exp(-beta_2*(t2[j,1]-t2[j-1,1])));\n    }\n\n    for(j in 2:M)\n    {\n        temp_sum<-0;\n        for(i in 1:N)\n        {\n            if(t1[i,1]>=t2[j,1]){break;}\n            if(t1[i,1]>=t2[j-1,1]&&t1[i,1]<t2[j,1]){temp_sum<-temp_sum+exp(-beta_2*(t2[j,1]-t1[i,1]));}\n        }\n        R_21[j,1]<-R_21[j-1,1]*exp(-beta_2*(t2[j,1]-t2[j-1,1]))+temp_sum;\n    }\n    \n    #R filled\n    #Begin calculate likelihood for each coordinate\n    \n    T<-t[datanum_total,1];\n\n    #Calculate L1\n    part1<-0;\n    part2<-0;\n    part3<-0;\n    #part1\n    for(i in 2:N)\n    {\n        part1<-part1+log(mu_1+alpha_11*R_11[i,1]+alpha_12*R_12[i,1]);\n    }\n    #print(part1)\n    #part2\n    for(i in 1:N)\n    {\n        part2<-part2+(1-exp(-beta_1*(T-t1[i,1])));\n    }\n    part2<-part2*alpha_11/beta_1;\n    #part3\n    for(j in 1:M)\n    {\n        part3<-part3+(1-exp(-beta_1*(T-t2[j,1])));\n    }\n    part3<-part3*alpha_12/beta_1;\n    L1<-part1-mu_1*T-part2-part3;\n    \n    #Calculate L2\n    part1<-0;\n    part2<-0;\n    part3<-0;\n    #part1\n    for(j in 2:M)\n    {\n        part1<-part1+log(mu_2+alpha_21*R_21[j,1]+alpha_22*R_22[j,1]);\n    }\n    #print(part1)\n    #part2\n    for(j in 1:M)\n    {\n        part2<-part2+(1-exp(-beta_2*(T-t2[j,1])));\n    }\n    part2<-part2*alpha_22/beta_2;\n    #part3\n    for(i in 1:N)\n    {\n        part3<-part3+(1-exp(-beta_2*(T-t1[i,1])));\n    }\n    part3<-part3*alpha_21/beta_2;\n    L2<-part1-mu_2*T-part2-part3;\n    L<-L1+L2\n\n    return (L);\n}\n#MLEconstrain<-function(theta,points,process_dim)\n#{\n#    M<-process_dim\n#    gamma<-theta[(M+1):(M^2+M)]/theta[(M^2+M+1):(2*M^2+M)];\n#    return (gamma);\n#}\nMLEhin<-function(theta,points)\n{\n    mu_1<-theta[1];mu_2<-theta[2];\n    alpha_11<-theta[3];alpha_12<-theta[5];alpha_21<-theta[4];alpha_22<-theta[6];\n    beta_1<-theta[7];beta_2<-theta[8] \n    h<-c(mu_1,mu_2,alpha_11,alpha_12,alpha_21,alpha_22,beta_1,beta_2,1-alpha_11/beta_1,1-alpha_12/beta_1,1-alpha_21/beta_2,1-alpha_22/beta_2);\n    h;\n}\n\n\n#Optimization\n#Benchmark\nloop_num<-1;\nmu<-array(c(0.5,0.5),dim=c(2,1));\nalpha<-array(c(0.2,0.5,0.2,0.5),dim=c(2,2));\nbeta<-array(c(1,1,1,1),dim=c(2,2));\nbeta_r<-array(c(1,1),dim=c(2,1));\n#theta<-c(mu,alpha)\ntheta<-c(mu,alpha,beta_r)\n\nT<-100;\nfor(i in 1:loop_num)\n{\n   #simulation\n   #cat('Start simulation ',i,'\\n')\n   #start<-proc.time()\n    #set.seed(1)\n   x<-MultiHawkesSim(mu,alpha,beta,T);\n   true<-BiHawkesLikelihood(theta,x)\n    #print(result)\n   par<-constrOptim.nl(par=theta,fn=BiHawkesLikelihood,hin=MLEhin,control.outer=list(trace=FALSE),control.optim=list(trace=FALSE,fnscale=-0.01),points=x);\n    print(par)\n    write(c(true,par$value,par$par),file='pars_100_bh_parallel_test.csv',ncolumns=10,sep=\",\",append=TRUE);\n    print(proc.time()-start)\n    cat('End simulation ',i,'\\n')\n}\n\n# TestSimulation<-function(x)\n# {\n#     #set.seed(1)\n#     T<-50;\n#     mu<-array(c(0.5,0.5),dim=c(2,1));\n#     alpha<-array(c(0.2,0.5,0.2,0.5),dim=c(2,2));\n#     beta<-array(c(1,1,1,1),dim=c(2,2));\n#     beta_r<-array(c(1,1),dim=c(2,1));\n#     y<-MultiHawkesSim(mu,alpha,beta,T);\n#     par<-constrOptim.nl(par=theta,fn=BiHawkesLikelihood,hin=MLEhin,control.outer=list(trace=FALSE),control.optim=list(trace=FALSE,fnscale=-0.01),points=y);\n#     return (par);\n# }\n# start<-proc.time()\n# for(i in 1:5)\n# {\n#     TestSimulation(1);\n# }\n# end<-proc.time()-start;\n# print(end)\n",
    "created" : 1369165070060.000,
    "dirty" : false,
    "encoding" : "UTF-8",
    "folds" : "",
    "hash" : "2898530094",
    "id" : "412E3C23",
    "lastKnownWriteTime" : 1368583827,
    "path" : "~/Desktop/Link to R_Analysis_Framework/Hawkes_Process/BiHawkesLikelihood.R",
    "properties" : {
    },
    "source_on_save" : false,
    "type" : "r_source"
}