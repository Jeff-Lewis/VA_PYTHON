{
    "contents" : "library(alabama)\nMultiHawkesLikelihood<-function(theta,points,process_dim)\n{\n  \n  #mu:background intensity M x 1 matrix\n  #alpha,beta: M x M matrix, with rows i being the parameters of process i\n  #Get parameters\n  M<-process_dim\n  mu<-matrix(theta[1:M],M,1);\n  #print(mu)\n  alpha<-matrix(theta[(M+1):(M^2+M)],M,M);\n  #beta<-array(c(1,1,1,1),dim=c(2,2));\n  beta<-matrix(theta[(M^2+M+1):(2*M^2+M)],M,M);\n  \n  #Get datas\n  #points:dataset,type list, with list 1 being the total time(Nx1 matrix), and list2 being a list of the time of subprocesses\n  t<-points[[1]]; \n  sub_process<-list();\n  #print('test')\n  for(m in 1:M)\n  {\n    sub_process[[m]]<-points[[2]][[m]];\n  }\n  #datanum_sub: M x 1 matrix to store the length of total process and sub processes\n  #datanum_total: 1 x 1 matrix to store the length of total process\n  datanum_sub<-matrix(0,M,1);\n  for(m in 1:M)\n  {\n    datanum_sub[m,1]<-dim(sub_process[[m]])[1];\n  }\n  datanum_total<-dim(t)[1];\n  \n  #calculate R cubic\n  dimR<-max(datanum_sub);\n  R<-array(NaN,c(M,M,dimR));\n  #Set the first floor of R as zero\n  R[,,1]<-0;\n  #fill the R matrix\n  for(m in 1:M)\n  {\n    for(n in 1:M)\n    {\n      if(m!=n)\n      {\n        for(i in 2:datanum_sub[m,1])\n        {\n          temp_sum<-0;\n          for(k in 1:datanum_sub[n,1])\n          {\n            if(sub_process[[n]][k,1]>=sub_process[[m]][i,1]){break;}\n            if((sub_process[[n]][k,1]>=sub_process[[m]][i-1,1])&&(sub_process[[n]][k,1]<sub_process[[m]][i,1]))\n            {\n              temp_sum<-temp_sum+exp(-beta[m,n]*(sub_process[[m]][i,1]-sub_process[[n]][k,1]));\n            }\n          }\n          R[m,n,i]<-exp(-beta[m,n]*(sub_process[[m]][i,1]-sub_process[[m]][i-1,1]))*R[m,n,i-1]+temp_sum;\n        }\n      }\n      else\n      {\n        for(i in 2:datanum_sub[m,1])\n        {\n          R[m,n,i]<-exp(-beta[m,n]*(sub_process[[m]][i,1]-sub_process[[m]][i-1,1]))*(R[m,n,i-1]+1);\n        }\n      }\n    }\n  }\n  #R filled\n  #Begin calculate likelihood for each coordinate\n  #sub_le is a M x 1 matrix to store the likelihood of each coordinate\n  \n  sub_le<-matrix(0,M,1);\n  T<-t[datanum_total,1];\n  \n  for(m in 1:M)\n  {\n    part1<-0;\n    #for(i in 1:datanum_sub[m])#datanum_total\n    #{\n    #    for(n in 1:M)\n    #    {\n    #        part1<-part1+alpha[m,n]/beta[m,n]*(1-exp(-beta[m,n]*(T-sub_process[[m]][i,1])));#t[i,1]\n    #    }\n    #}\n    for(n in 1:M)#datanum_total\n    {\n      for(i in 1:datanum_sub[n])\n      {\n        part1<-part1+alpha[m,n]/beta[m,n]*(1-exp(-beta[m,n]*(T-sub_process[[n]][i,1])));#t[i,1]\n      }\n    }\n    \n    part2<-0;\n    for(i in 2:datanum_sub[m])\n    {\n      temp_sum<-0;\n      for(n in 1:M)\n      {\n        temp_sum<-temp_sum+alpha[m,n]*R[m,n,i];\n      }\n      part2<-part2+log(mu[m,1]+temp_sum);            \n    }\n    #print(part2)\n    sub_le[m,1]<--mu[m,1]*T-part1+part2;\n  }\n  \n  return (sum(sub_le));\n  \n}\nMLEconstrain<-function(theta,points,process_dim)\n{\n  M<-process_dim\n  gamma<-theta[(M+1):(M^2+M)]/theta[(M^2+M+1):(2*M^2+M)];\n  return (gamma);\n}\nMLEhin<-function(theta,points,process_dim)\n{\n  \n  M<-process_dim\n  mu<-theta[1:M];\n  alpha<-theta[(M+1):(M^2+M)];\n  #beta<-array(c(1,1,1,1),dim=c(2,2));\n  beta<-theta[(M^2+M+1):(2*M^2+M)]\n  gamma<-1-theta[(M+1):(M^2+M)]/theta[(M^2+M+1):(2*M^2+M)];\n  #mu_lb<-mu-0.0001\n  #mu_ub<-10-mu\n  #alpha_lb<-alpha-0.0001\n  #alpha_ub<-10-alpha;\n  #beta_ub<-10-beta\n  #beta_lb<-beta-0.0001\n  h<-c(gamma,mu,alpha,beta)\n  h;\n}\n\n\n#Optimization\n#Benchmark\nloop_num<-20\nresult<-matrix(0,1,10)\n\nmu<-array(c(0.5,0.5),dim=c(2,1));\nalpha<-array(c(0.2,0.5,0.2,0.5),dim=c(2,2));\nbeta<-array(c(1,1,1,1),dim=c(2,2));\n#theta<-c(mu,alpha)\ntheta<-c(mu,alpha,beta)\nT<-10;\nM<-2;\nset.seed(1)\n#for(i in 1:loop_num)\n#{\n#simulation\n#cat('Start simulation ',i,'\\n')\nstart<-proc.time()\n#x<-MultiHawkesSim(mu,alpha,beta,T);\nresult1<-MultiHawkesLikelihood(theta,x,2)\n#print(result1)\n#theta<-runif(10)\npar<-constrOptim.nl(par=theta,fn=MultiHawkesLikelihood,hin=MLEhin,control.optim=list(trace=0,fnscale=-0.01),points=x,process_dim=M);\n#print(par$par)\n#write(par$par,file='pars_100_changed.csv',ncolumns=10,sep=\",\",append=TRUE);\n#print(proc.time()-start)\n#cat('End simulation ',i,'\\n')\n#}\nresult<-result[-1,]",
    "created" : 1369163348972.000,
    "dirty" : false,
    "encoding" : "UTF-8",
    "folds" : "",
    "hash" : "2993624821",
    "id" : "F2A46EA8",
    "lastKnownWriteTime" : 1369156570,
    "path" : "~/Dropbox/Vschon/R_Analysis_Framework/Hawkes_Process/MultihawkesMLE_beta_fixed.R",
    "properties" : {
    },
    "source_on_save" : false,
    "type" : "r_source"
}